==============
4-print_square
==============

`print_square` Function
-----------------------

Description:
    This module contains a function called 'print_square' that prints a square
    with the character '#' based on the provided size.

Prototype:
    def print_square(size):

Parameters:
    - `size` (int): The size length of the square.

Raises:
    - TypeError: If `size` is not an integer or if it's a float less than 0.
    - ValueError: If `size` is less than 0.

Usage:

::

    >>> print_square = __import__('4-print_square').print_square
    >>> print_square(8)
    ########
    ########
    ########
    ########
    ########
    ########
    ########
    ########

Raises TypeError if `size` is not an integer:

::

    >>> print_square("not_an_integer")
    Traceback (most recent call last):
    TypeError: size must be an integer

Raises TypeError if `size` is a float and less than 0:

::

    >>> print_square(3.5)
    Traceback (most recent call last):
    TypeError: size must be an integer

Raises ValueError if `size` is less than 0:

::

    >>> print_square(-2)
    Traceback (most recent call last):
    ValueError: size must be >= 0

The `size` parameter is used to determine the length and width of the square.

::

    >>> print_square(1)
    #
    
    >>> print_square(0)
    
    >>> print_square(2)
    ##
    ##
